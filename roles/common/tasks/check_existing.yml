---
- name: Check for presence of API Deployment
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ ansible_operator_meta.namespace }}"
    label_selectors:
      - 'app.kubernetes.io/instance={{ deployment_type }}-api-{{ ansible_operator_meta.name }}'
      - 'app.kubernetes.io/part-of={{ deployment_type }}'
      - 'app.kubernetes.io/managed-by={{ deployment_type }}-operator'
  register: _api_deployment

- name: Set previous_version if deployment exists
  when: _api_deployment.resources | length > 0
  block:
    - name: Check if {{ kind }} CR exists by name
      kubernetes.core.k8s_info:
        kind: "{{ kind }}"
        api_version: '{{ api_version }}'
        name: "{{ ansible_operator_meta.name }}"
        namespace: '{{ ansible_operator_meta.namespace }}'
      register: existing_cr

    - name: Update previous existing deployment without version
      when: existing_cr.resources[0].status.deployedVersion is not defined
      block:
        - name: Get galaxy settings
          ansible.builtin.include_role:
            name: galaxy-config
            tasks_from: combine_galaxy_settings.yml

        - name: Set deployedVersion if not present
          ansible.builtin.include_role:
            name: galaxy-status
            tasks_from: version.yml

    - name: Check the updated {{ kind }} CR
      kubernetes.core.k8s_info:
        kind: "{{ kind }}"
        api_version: '{{ api_version }}'
        name: "{{ ansible_operator_meta.name }}"
        namespace: '{{ ansible_operator_meta.namespace }}'
      register: existing_cr

    - name: Set previous_version version based on {{ deployment_type }} CR version status
      ansible.builtin.set_fact:
        previous_version: "{{ existing_cr.resources[0].status.deployedVersion }}"

    - name: Set upgraded_from to previous_version ({{ previous_version }}) if older than gating_version ({{ gating_version }})
      ansible.builtin.set_fact:
        upgraded_from: "{{ previous_version }}"
      when:
        - previous_version is defined
        - previous_version is version(gating_version, '<')
...
