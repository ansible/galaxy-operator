---

- k8s_status:
    api_version: "{{ api_version }}"
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: "{{ deployment_type|capitalize }}-API-Ready"
        message: "Creating {{ ansible_operator_meta.name }}-api-svc Service resource"
        reason: CreatingService
        status: "False"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"

- name: galaxy-api service
  k8s:
    state: "{{ deployment_state }}"
    definition: "{{ lookup('template', 'templates/' + item + '.service.yaml.j2') | from_yaml }}"
  with_items:
    - galaxy-api

- name: Set default galaxy-api image
  set_fact:
    _default_image: "{{ _image }}:{{ _image_version }}"

- name: Set user provided galaxy-api image
  set_fact:
    _custom_image: "{{ image }}:{{ image_version }}"
  when:
    - image is defined and image != ''
    - image_version is defined and image_version != ''

- name: Set galaxy-api image URL
  set_fact:
    _image: "{{ _custom_image | default(lookup('env', 'RELATED_IMAGE_GALAXY')) | default(_default_image, true) }}"

- name: Set node affinity
  set_fact:
    _node_affinity: "{{ raw_spec['affinity']['node_affinity'] | default({}) }}"
  when: affinity is defined and affinity.node_affinity is defined

- name: Get container token configuration
  k8s_info:
    kind: Secret
    namespace: '{{ ansible_operator_meta.namespace }}'
    name: '{{ container_token_secret }}'
  register: _container_token_configuration
  no_log: "{{ no_log }}"

- include_tasks:
    file: container_auth_configuration.yml
  when:
    - (_container_token_configuration is not defined) or not (_container_token_configuration['resources'] | length)

- name: Get container token keys
  set_fact:
    container_auth_private_key_name: "tls.key"
    container_auth_public_key_name: "tls.crt"
  no_log: "{{ no_log }}"
  when:
    - _container_token_configuration is defined
    - _container_token_configuration['resources'][0]['data']['tls.crt'] is defined
    - _container_token_configuration['resources'][0]['data']['tls.crt'] | length
    - _container_token_configuration['resources'][0]['data']['tls.key'] is defined
    - _container_token_configuration['resources'][0]['data']['tls.key'] | length

- k8s_status:
    api_version: "{{ api_version }}"
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: "{{ deployment_type|capitalize }}-API-Ready"
        message: "Creating {{ ansible_operator_meta.name }}-api Deployment resource"
        reason: CreatingDeployment
        status: "False"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"

- name: galaxy-api deployment
  k8s:
    state: "{{ deployment_state }}"
    definition: "{{ lookup('template', 'templates/' + item + '.deployment.yaml.j2') | from_yaml }}"
  with_items:
    - galaxy-api

- include_tasks:
    file: resource_configuration.yml

- k8s_status:
    api_version: "{{ api_version }}"
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: "{{ deployment_type|capitalize }}-API-Ready"
        message: All API tasks ran successfully
        reason: ApiTasksFinished
        status: "True"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"
