---
name: Stage Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to stage. If not set, a cal-version will be generated'
        required: false
      default_galaxy_version:
        description: 'Will be injected as the DEFAULT_GALAXY_VERSION build arg.'
        required: true
      default_galaxy_ui_version:
        description: 'Will be injected as the DEFAULT_GALAXY_UI_VERSION build arg.'
        required: true
      confirm:
        description: 'Are you sure? Set this to yes.'
        required: true
        default: 'no'

jobs:
  stage:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Verify inputs
        run: |
          set -e

          if [ "${{ github.event.inputs.confirm }}" != "yes" ]; then
            >&2 echo "Confirm must be 'yes'"
            exit 1
          fi

          if [ "${{ github.event.inputs.version }}" = "" ]; then
            >&2 echo "No version specified. A cal-version will be generated."
          fi

          exit 0

      - name: Checkout galaxy-operator
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/galaxy-operator
          path: galaxy-operator

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Install playbook dependencies
        run: |
          python3 -m pip install docker

      - name: Generate CalVer and create release
        id: generate_version
        run: python generate_version.py
        env:
          INPUT_VERSION: ${{ github.event.inputs.version }}
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry ghcr.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d    # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Operator Image
        run: |
          BUILD_ARGS="--build-arg DEFAULT_GALAXY_VERSION=${{ github.event.inputs.default_galaxy_version }} \
              --build-arg DEFAULT_GALAXY_UI_VERSION=${{ github.event.inputs.default_galaxy_ui_version }} \
              --build-arg OPERATOR_VERSION=${{ steps.generate_version.outputs.version }}" \
          IMG=ghcr.io/${{ github.repository }}:${{ steps.generate_version.outputs.version }} \
          make docker-buildx
        working-directory: galaxy-operator

      # Stub task for later PR to add Galaxy CI run
      # - name: Run test deployment
      #   working-directory: galaxy-operator
      #   run: |
      #     python3 -m pip install -r molecule/requirements.txt
      #     ansible-galaxy collection install -r molecule/requirements.yml
      #     sudo rm -f $(which kustomize)
      #     make kustomize
      #     KUSTOMIZE_PATH=$(readlink -f bin/kustomize) molecule test -s kind
      #   env:
      #     GALAXY_TEST_VERSION: ${{ github.event.inputs.default_galaxy_version }}

      - name: Generate operator.yaml
        run: make generate-operator-yaml VERSION=${{ steps.generate_version.outputs.version }}
        working-directory: galaxy-operator

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_version.outputs.version }}
          release_name: Release ${{ steps.generate_version.outputs.version }}
          draft: true

      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./galaxy-operator/operator.yaml
          asset_name: operator.yaml
          asset_content_type: application/yaml
