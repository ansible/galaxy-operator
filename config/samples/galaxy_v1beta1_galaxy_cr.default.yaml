apiVersion: galaxy.ansible.com/v1beta1
kind: Galaxy
metadata:
  name: example-galaxy
#spec:
  # The registry to grab the galaxy image from.
# image: quay.io/ansible/galaxy-ng
# image_version: main

# Pulp settings.
# pulp_settings:
#   debug: "True"
#   AUTHENTICATION_BACKEND_PRESET: ldap
#   AUTH_LDAP_SERVER_URI: "ldap://ldap:10389"
#   AUTH_LDAP_BIND_DN: "cn=admin,dc=planetexpress,dc=com"
#   AUTH_LDAP_BIND_PASSWORD: "GoodNewsEveryone"
#   AUTH_LDAP_USER_SEARCH_BASE_DN: "ou=people,dc=planetexpress,dc=com"
#   AUTH_LDAP_USER_SEARCH_SCOPE: "SUBTREE"
#   AUTH_LDAP_USER_SEARCH_FILTER: "(uid=%(user)s)"
#   AUTH_LDAP_GROUP_SEARCH_BASE_DN: "ou=people,dc=planetexpress,dc=com"
#   AUTH_LDAP_GROUP_SEARCH_SCOPE: "SUBTREE"
#   AUTH_LDAP_GROUP_SEARCH_FILTER :  "(objectClass=Group)"
#   AUTH_LDAP_GROUP_TYPE_CLASS: "django_auth_ldap.config:GroupOfNamesType"
  # The galaxy adminstrator password secret.
# admin_password_secret:
  # PostgreSQL container settings secret.
# postgres_configuration_secret: pg_secret_name
  # Configuration for the persistentVolumeClaim for /var/lib/pulp
# storage_type: File
  # Select storage type: File, S3, Azure
  # If your K8s cluster is only 1 node, and its StorageClass /
  # provisioner does not support ReadWriteMany, then you must change
  # this to "ReadWriteOnce".
  #
  # If your K8s cluster is multiple nodes, and does not support
  # ReadWriteMany, then galaxy-operator is currently incompatible.
  #
  # Reference on which support ReadWriteMany:
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
# file_storage_access_mode: "ReadWriteMany"

  # How much space do you want to give Pulp for storing content under
  # /var/lib/pulp ?
  # https://docs.pulpproject.org/en/3.0/nightly/installation/configuration.html#media-root

  # For reference, epel7 x86_64 is currently (2019-07) 30G. So 100G
  # should be sufficient for a test deployment with only the RPM
  # content plugin.
# file_storage_size: "100Gi"
# object_storage_s3_secret: example-galaxy-object-storage
  # Configuration for S3 credentals
# object_storage_azure_secret: example-galaxy-object-storage
  # Configuration for Azure credentals
  # Values below are set in roles rather than in playbook.yaml
# api:
#   replicas: 1
#   log_level: INFO
# content:
#   replicas: 2
#   log_level: INFO
# worker:
#   replicas: 2
# resource_manager:
#   replicas: 1
